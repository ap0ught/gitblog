Stored at {repo}/content/{pathname of content object}.comments and contains
chunks of JSON data.

An associative array is stored in this file and contains a list of associative
comments (arrays themselves) keyed by auto-increment integer. When a new comment
is added it receives number ((number of previous) + 1) -- this way a comment 
in the middle can be removed without newer comments being reassigned to other
numbers/ids.

Example:
	Post: 		{repo}/content/posts/2008/11/24-smisk.html
	Comments: {repo}/content/posts/2008/11/24-smisk.comments

Comments are read like this:
	$comments = json_decode(file_get_contents(path));

And added like this: (pseudo code)
	fp = open(path)
	flock(fp, excl)
	$comments = json_decode(fread(fp))
	if (!$comments)
		$comments = array(1 => $comment)
	else
		$comments[array_pop(array_keys($comments))+1] = $comment
	fseek(fp, 0)
	fwrite(fp, json_encode($comments))
	funlock(fp)
	fclose(fp)
	gb::add(path)
	gb::commit('new comment on {post->}', 
	                comment->name.' <'.comment->email.'>')

This is how .comment-files look:

{
	"1" : {
	  "date": "2008-11-24T21:27:06+0200",
		"ipAddress": "89.233.196.218",
		"email": "maxberggren@gmail.com",
		"uri": "http://maxberggren.com",
		"name": "Max Berggren",
		"content": "Whatever \"content\" in\nhere",
		"approved": true,
		"comments": [
			/* comment, .. */
		]
	},
	"2" : {
		...
}
